    팩토리 메소드 패턴에서는 하나의 팩토리 클래스가 들어오면 값에 따라 if-else나 switch 문을 사용하여 다양한 서브클래스를 리턴하는 방식으로 구현했다면
추상 팩토리 패턴은 팩토리 클래스에서 서브 클래스를 생성할 때 if-else등을 걷어낸다. 추상 팩토리는 식별 데이터를 받는 것이 아니라 또 하나의 팩토리 클래스를 받는다.


추상 팩토리의 장점
    1.추상 팩토리 패턴은 구현보다 인터페이스를 위한 코드 접근법을 제공한다. > getComputer() 메소드의 파라미터로 인터페이스를 받아 처리하기 때문에 getComputer()에서 구현할 것이 그리 복잡하지 않는다.
    2.추상 팩토리 패턴은 subClass를 확장하는 데 있어 굉장히 쉽게 할 수 있다.
    3. 추상 팩토리 패턴은 팩토리 패턴의 if-else, switch로부터 벗어난다.