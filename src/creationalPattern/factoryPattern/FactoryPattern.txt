사용 시기
//    1. 어떤 클래스가 자신이 생성해야 하는 객체의 클래스를 예측할 수 없을 때
//    2. 생성할 객체를 기술하는 책임을 자신의 서브클래스가 지정했으면 할 때

팩토리 패턴의 장점
1. 팩토리 패턴은 클라이언트 코드로부터 서브 클래스의 인스턴스화를 제거하여 서로 간의 종속성을 낮추고, 결합도를 느슨하게 하며, 확장을 쉽게 한다.
    > pc 클래스를 지워도 코드를 따로 변경할 필요가 없다.

2. 팩토리 패턴은 클라이언트와 구현 객체들 사이에 추상화를 제공한다.
