상속과 합성(composite)을 이용해서 객체에 동적으로 책임을 추가할 수 있게 한다. 이 방법은 서브클래스를 생성하는 것보다 유연한 방법을 제공한다. 


>> 데코레이터 패턴은 런타임에서 유연하게 객체의 기능들을 수정하고 조합하는데 유용하게 사용되는 패턴이다.
>> 단점이라면 다수의 데코레이터 객체를 생성하고 사용해야 한다는 것이다.
>> FileReader, BufferedReader 등의 IO클래스에서 주로 사용되는 패턴 