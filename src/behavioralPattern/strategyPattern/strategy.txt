기능(알고리즘)들을 정의하고 각 기능을 캡슐화하고 상호 교환이 가능하게 하는 패턴

실행 중에 알고리즘을 선택할 수 있게 하는 행위 소프트웨어 디자인 패턴이다.
특정한 계열의 알고리즘을 정의하고 각 알고리즘을 캡슐화하고 해당 계열 안에서 상호 교체가 가능하게 한다.


>> 장점
하위 분류에 대해서 대체 할 수 있게 해준다.
각 클래스의 동작을 정의할 수 있게 한다. 그에 따라 불필요한 조건문을 제거해준다.
애플리케이션 수정 없이도 확장이 쉽게하고 새로운 동작을 통합할 수 있게한다.

>> 사용
여러 클래스가 동작에서만 다를 때
알고리즘의 변형이 필요할 때