책임 연쇄 패턴에서 요청은 연쇄된 객체로 전달되고 연쇄된 어떤 객체이든 이를 처리한다. 
책임 연쇄는 요청에 대한 결합도를 느슨하게 하기 위해 사용한다. 이는 각 객체가 모두 요청을 처리할 수 있는 기회를 주면서 가능하게 된다. (한 객체가 처리하지 못하면 다음 객체로 넘긴다.)

예시로 ATM이 책임 연쇄 패턴을 사용한다. 

>>>
결합도를 낮춘다.
책임 분배에 유연하다.
일련의 클래스를 하나처럼 사용하게 만들어준다. 


>>>>>>>>>
알수 없는 요청에 대해서 하나 이상의 객체가 대응할 수 있게 한다.
동적으로 특정되어 다뤄져야할 때 사용된다. 

> 처리 객체를 연결함으로써 결합을 느슨하게 하기 위한 패턴이다.
일반적으로 요청을 처리할 수 있는 개체를 찾을 때까지 요청을 전달한다.
